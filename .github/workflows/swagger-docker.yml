name: swagger-docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "master", "dev" ]
    # Publish semver tags as releases.
  pull_request:
    branches: [ "master" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: on4treg.azurecr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: swaggerui
  DOCKER_USER: on4treg


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

      id-token: write


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone SwagDeploy
        uses: actions/checkout@v2
        with:
          repository: wok-gocaspi/swagdeploy
          path: resources/swagdeploy
          ref: master
      - uses: actions/setup-node@v3
        with:
          node-version: 14.x
      - name: Install SwagDeploy Dependencies

        working-directory: resources/swagdeploy
        run: npm i

      - name: Copy postmanCollection
        run: cp postman/*.postman_collection.json resources/swagdeploy
      - name: Create Output Directory
        working-directory: resources/swagdeploy
        run: mkdir output
      - name: Execute SwagDeploy
        working-directory: resources/swagdeploy
        run: node app.js
      - name: Copy Swagger to Repo
        run: cp resources/swagdeploy/output/collection.yml ./postman
      - name: Read Collection Yaml TEST
        run: cat postman/collection.yml
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25
        with:
          cosign-release: 'v1.9.0'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: postman/.
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}


