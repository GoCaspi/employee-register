openapi: 3.0.0
info:
  title: employee-register
  version: 1.0.0
servers:
  - url: http://{{host}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
paths:
  /register:
    post:
      tags:
        - General
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                employees:
                  - id: '{{mockId1}}'
                    first_name: '{{mockFirstName1}}'
                    last_name: '{{mockLastName1}}'
                    email: '{{mockEmail1}}'
                    auth:
                      username: '{{mockUsername1}}'
                      password: '{{mockPassword1}}'
                    department: ON4T
                  - id: '{{mockId2}}'
                    first_name: '{{mockFirstName2}}'
                    last_name: '{{mockLastName2}}'
                    email: '{{mockEmail2}}'
                    auth:
                      username: '{{mockUsername2}}'
                      password: '{{mockPassword2}}'
                    department: ON4T
                  - id: '{{mockId3}}'
                    first_name: '{{mockFirstName3}}'
                    last_name: '{{mockLastName3}}'
                    email: '{{mockEmail3}}'
                    auth:
                      username: '{{mockUsername3}}'
                      password: '{{mockPassword3}}'
                    department: ON4T
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Tue, 12 Jul 2022 15:35:58 GMT
            Content-Length:
              schema:
                type: integer
                example: '28'
          content:
            application/json:
              schema:
                type: object
              example:
                - 62cd94de7b84cd99a01d474e
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Wed, 13 Jul 2022 11:17:54 GMT
            Content-Length:
              schema:
                type: integer
                example: '34'
          content:
            application/json:
              schema:
                type: object
              example:
                errorMessage: invalid payload
  /Login:
    post:
      tags:
        - General
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: '{{mockUsername1}}'
                password: '{{mockPassword1}}'
      parameters:
        - name: id
          in: query
          schema:
            type: string
          example: '{{mockId1}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Tue, 12 Jul 2022 15:37:19 GMT
            Content-Length:
              schema:
                type: integer
                example: '62'
          content:
            application/json:
              schema:
                type: object
              example: 'Success! Your Token is: b915b416-77b2-4dea-97a1-5f224eca3e59'
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Tue, 12 Jul 2022 15:49:41 GMT
            Content-Length:
              schema:
                type: integer
                example: '35'
          content:
            application/json:
              schema:
                type: object
              example: The username or password is wrong
  /employee/{mockId2}/get:
    get:
      tags:
        - General
      summary: Getbyid
      security:
        - bearerAuth: []
      parameters:
        - name: mockId2
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Tue, 12 Jul 2022 15:41:11 GMT
            Content-Length:
              schema:
                type: integer
                example: '89'
          content:
            application/json:
              schema:
                type: object
              example:
                id: '1657178729293'
                first_name: Uca
                last_name: Hauer
                email: UcaHauer@mail.com
        '401':
          description: Unauthorized
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Wed, 13 Jul 2022 11:15:32 GMT
            Content-Length:
              schema:
                type: integer
                example: '59'
          content:
            application/json:
              schema:
                type: object
              example: No token is provided. Please login in and provide a token
  /employee/get:
    get:
      tags:
        - General
      summary: GetEmployees
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Fri, 31 Mar 2023 09:17:23 GMT
            Content-Length:
              schema:
                type: integer
                example: '305'
          content:
            application/json:
              schema:
                type: object
              example:
                employees:
                  - id: 1274380d-7b86-4a7a-bf7c-bd868514f539
                    first_name: Liam
                    last_name: Brother
                    email: liam.brother@aol.com
                    department: ON4T
                  - id: a2262cd9-ee16-4148-9f0e-b9d60162f902
                    first_name: Hans
                    last_name: Peter
                    email: hans.peter@gmail.com
                    department: ON4T
                pageLimit: 2
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Fri, 31 Mar 2023 09:22:09 GMT
            Content-Length:
              schema:
                type: integer
                example: '77'
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: GetEmployees - Invalid Page Number
                  value:
                    errorMessage: invalid page number, page number can't be zero or negative
                example-1:
                  summary: GetEmployees - Page Limit Reached
                  value:
                    errorMessage: page limit reached, please reduce the page number
  /{mockId1}/update:
    put:
      tags:
        - General
      summary: UpdateEmployee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                first_name: GÃ¼nther
      parameters:
        - name: mockId1
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Fri, 31 Mar 2023 09:24:13 GMT
            Content-Length:
              schema:
                type: integer
                example: '72'
          content:
            application/json:
              schema:
                type: object
              example:
                MatchedCount: 1
                ModifiedCount: 1
                UpsertedCount: 0
                UpsertedID: null
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Fri, 31 Mar 2023 09:24:47 GMT
            Content-Length:
              schema:
                type: integer
                example: '34'
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: UpdateEmployee - Invalid Payload
                  value:
                    errorMessage: invalid payload
                example-1:
                  summary: UpdateEmployee - Employee was not found
                  value: Employee was not found
  /employee/addShift:
    post:
      tags:
        - General
      summary: CreateDutyRoster
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                week: 2
                duties:
                  default:
                    duty: default
                    start: '2023-03-31T11:04:36+02:00'
                    end: '2023-03-31T11:04:51+02:00'
                    duration: 30000
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          schema:
            type: string
          example: '{{mockId1}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Fri, 31 Mar 2023 09:16:11 GMT
            Content-Length:
              schema:
                type: integer
                example: '132'
          content:
            application/json:
              schema:
                type: object
              example:
                - week: 2
                  duties:
                    default:
                      duty: default
                      start: '2023-03-31T11:04:36+02:00'
                      end: '2023-03-31T11:04:51+02:00'
                      total: 0
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Fri, 31 Mar 2023 09:26:30 GMT
            Content-Length:
              schema:
                type: integer
                example: '30'
          content:
            application/json:
              schema:
                type: object
              example:
                errorMessage: Bad payload
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Fri, 31 Mar 2023 09:27:29 GMT
            Content-Length:
              schema:
                type: integer
                example: '58'
          content:
            application/json:
              schema:
                type: object
              example:
                errorMessage: No update could be send to the database
  /employee/dutyRoster:
    get:
      tags:
        - General
      summary: GetDutyRoster
      security:
        - bearerAuth: []
      parameters:
        - name: department
          in: query
          schema:
            type: string
          example: ON4T
        - name: week
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Fri, 31 Mar 2023 09:29:29 GMT
            Content-Length:
              schema:
                type: integer
                example: '156'
          content:
            application/json:
              schema:
                type: object
              example:
                'Hans Peter id: bf4351c5-8250-45ad-8f00-823a98caec99':
                  default:
                    duty: default
                    start: '2023-03-31T09:04:36Z'
                    end: '2023-03-31T09:04:51Z'
                    total: 0
        '404':
          description: Not Found
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Fri, 31 Mar 2023 09:28:46 GMT
            Content-Length:
              schema:
                type: integer
                example: '58'
          content:
            application/json:
              schema:
                type: object
              example:
                errorMessage: No results could be found to your query
  /employee/{mockId3}/delete:
    delete:
      tags:
        - General
      summary: Delete
      security:
        - bearerAuth: []
      parameters:
        - name: mockId3
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Tue, 12 Jul 2022 15:42:14 GMT
            Content-Length:
              schema:
                type: integer
                example: '1'
          content:
            application/json:
              schema:
                type: object
              example: 1
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Tue, 12 Jul 2022 15:51:15 GMT
            Content-Length:
              schema:
                type: integer
                example: '50'
          content:
            application/json:
              schema:
                type: object
              example:
                errorMessage: the Employee id is not existing
        '403':
          description: Forbidden
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Tue, 12 Jul 2022 15:51:42 GMT
            Content-Length:
              schema:
                type: integer
                example: '59'
          content:
            application/json:
              schema:
                type: object
              example: No token is provided. Please login in and provide a token
  /Logout:
    post:
      tags:
        - General
      summary: Logout
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: query
          schema:
            type: string
          example: '{{mockId1}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Tue, 12 Jul 2022 15:40:10 GMT
            Content-Length:
              schema:
                type: integer
                example: '51'
          content:
            application/json:
              schema:
                type: object
              example: Logut successfull. Your token is no longer valid.
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Date:
              schema:
                type: string
                example: Tue, 12 Jul 2022 15:49:07 GMT
            Content-Length:
              schema:
                type: integer
                example: '74'
          content:
            application/json:
              schema:
                type: object
              example: >-
                The provided token is not valid. Please login to generate a
                valid token.
